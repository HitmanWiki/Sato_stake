"use strict"; (self.webpackChunkdex = self.webpackChunkdex || []).push([[418], { 6892: (e, t, l) => { l.d(t, { Z: () => a }); var s = l(79139), i = l(80184); function a(e) { let { className: t = "", children: l, ...a } = e; return (0, i.jsx)(s.Button, { variant: "filled", className: "rounded-md normal-case text-sm font-normal shadow-none hover:shadow-none px-4 py-2 bg-[#00bcd433] ".concat(t), ...a, children: l }) } }, 49250: (e, t, l) => { l.d(t, { Z: () => a }); var s = l(79139), i = l(80184); function a(e) { let { className: t = "", children: l, ...a } = e; return (0, i.jsx)(s.IconButton, { variant: "text", className: "w-8 h-8 p-0 text-white hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ".concat(t), ...a, children: l }) } }, 18418: (e, t, l) => { l.r(t), l.d(t, { default: () => N }); var s = l(72791), i = l(57689), a = l(11087), n = l(62711), c = l(87337), A = l(38308), d = l(79139), o = l(91463), r = l(80184); function g(e) { let { className: t = "", children: l, ...s } = e; return (0, r.jsx)(d.Button, { variant: "text", className: "rounded-md normal-case text-sm font-normal text-gray-100 px-4 py-2 hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ".concat(t), ...s, children: l, to: "http://satothedog.com/" }) } var x = l(49250), u = l(6892); const v = "logo-crop.webp", j = [{ id: 1, label: "Home", iconName: "", to: "http://satothedog.com/" }, { id: 2, label: "Twitter", iconName: "line-md:twitter", to: "https://twitter.com/SATOofmemesreal" }, { id: 3, label: "Telegram", iconName: "la:telegram", to: "https://t.me/SATOonbase" }], b = "8453"; function N() { const { pathname: e } = (0, i.TH)(), { open: t } = (0, c.k_)(), { isConnected: l } = (0, A.mA)(), { disconnect: N } = (0, A.qL)(), { switchNetwork: m } = (0, A.g0)(), { chain: C } = (0, A.LN)(), B = (0, i.s0)(), [h, w] = (0, s.useState)(!1), f = () => { w(!1) }; return (0, r.jsxs)("nav", { className: "sticky top-0 bg-[#070a15] border-b border-gray-900 z-[99]", children: [(0, r.jsxs)(o.Z, { className: "justify-between p-3 hidden lg:flex", children: [(0, r.jsxs)("div", { className: "flex items-center gap-8", children: [(0, r.jsx)(a.rU, { to: "/", children: (0, r.jsx)("img", { src: v, alt: "logo", className: "h-[60px]" }) }), (0, r.jsx)("div", { className: "flex items-center gap-4", children: j.map((t => (0, r.jsx)(a.rU, { to: t.to, children: (0, r.jsxs)(g, { className: "flex items-center gap-2 ".concat(e === t.to ? "text-gray-100" : "text-gray-500"), children: [(0, r.jsx)(n.JO, { icon: t.iconName, className: "text-lg" }), t.label] }) }, t.id))) })] }), (0, r.jsx)("div", { className: "flex items-center gap-8", children: l ? (null === C || void 0 === C ? void 0 : C.id) === Number(b) ? (0, r.jsxs)(u.Z, { className: "flex items-center gap-1", onClick: () => N(), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Disconnect"] }) : (0, r.jsxs)(u.Z, { className: "flex items-center gap-1", onClick: () => null === m || void 0 === m ? void 0 : m(Number(b)), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Switch network"] }) : (0, r.jsxs)(u.Z, { className: "flex items-center gap-1 bg-blue-500", onClick: () => t(), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Connect Wallet"] }) })] }), (0, r.jsxs)(o.Z, { className: "justify-between items-center p-4 flex lg:hidden", children: [(0, r.jsx)(a.rU, { to: "/", children: (0, r.jsx)("img", { src: v, alt: "logo", className: "h-[60px]" }) }), (0, r.jsx)(x.Z, { onClick: () => w(!0), children: (0, r.jsx)(n.JO, { icon: "ion:menu", className: "text-xl" }) })] }), (0, r.jsx)(d.Drawer, { open: h, onClose: f, className: "p-4 bg-[#070a15]", children: (0, r.jsxs)("div", { className: "flex flex-col gap-8", children: [(0, r.jsxs)("div", { className: "flex items-center justify-between", children: [(0, r.jsx)(a.rU, { to: "/", children: (0, r.jsx)("img", { src: v, alt: "logo", className: "h-[60px]" }) }), (0, r.jsx)(x.Z, { onClick: f, children: (0, r.jsx)(n.JO, { icon: "akar-icons:cross", className: "text-xl" }) })] }), (0, r.jsx)(d.List, { children: j.map((t => (0, r.jsxs)(d.ListItem, { onClick: () => { return e = t.to, B(e), void f(); var e }, className: "gap-4 ".concat(e === t.to ? "text-gray-100" : "text-gray-500"), children: [(0, r.jsx)(n.JO, { icon: t.iconName, className: "text-lg" }), t.label] }, t.id))) }), (0, r.jsx)(d.List, { children: l ? (null === C || void 0 === C ? void 0 : C.id) === Number(b) ? (0, r.jsxs)(d.ListItem, { className: "gap-4 text-gray-100", onClick: () => N(), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Disconnect"] }) : (0, r.jsxs)(d.ListItem, { className: "gap-4 text-gray-100", onClick: () => null === m || void 0 === m ? void 0 : m(Number(b)), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Switch network"] }) : (0, r.jsxs)(d.ListItem, { className: "gap-4 text-gray-100", onClick: () => t(), children: [(0, r.jsx)(n.JO, { icon: "mdi:wallet-outline", className: "text-xl" }), "Connect Wallet"] }) })] }) })] }) } } }]);
//# sourceMappingURL=418.141a8c28.chunk.js.map